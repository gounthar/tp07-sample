name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn install

      - name: List target directory contents
        run: ls -la target

      - name: Upload war file
        uses: actions/upload-artifact@v4
        with:
          name: war-file
          path: target/*.war

  create-release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build war file
        run: mvn install

      - name: Verify build success
        run: |
          if [ ! -f target/*.war ]; then
            echo "WAR file not found in target directory"
            exit 1
          fi

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Get version
        id: version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Update project version
        run: mvn versions:set -DnewVersion="$(date +'%Y.%m.%d-%H%M%S')"

      - name: Commit updated pom.xml
        run: |
          git add pom.xml
          git commit -m "Update project version to $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ format('v{0}', steps.version.outputs.version) }}
          name: Release ${{ format('v{0}', steps.version.outputs.version) }}
          draft: false
          prerelease: false
          files: target/*.war
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Set output tag name
        run: echo "tag_name=${{ format('v{0}', steps.version.outputs.version) }}" >> $GITHUB_ENV

      - name: Pull latest changes
        run: |
          git pull --rebase origin main || {
            git status
            git diff
            git rebase --abort
            exit 1
          }

      - name: Push changes
        run: git push origin HEAD:main

  upload-release-asset:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download war file
        uses: actions/download-artifact@v4
        with:
          name: war-file
          path: target

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Upload war file to GitHub release
        run: gh release upload ${{ env.tag_name }} target/*.war --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Verify upload
        run: gh release view ${{ env.tag_name }} --json assets -q '.assets[].name'
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
